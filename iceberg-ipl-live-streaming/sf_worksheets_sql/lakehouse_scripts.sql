// ************************ SETTING UP THE ENVIRONMENT
USE ROLE ACCOUNTADMIN;
CREATE DATABASE IF NOT EXISTS CDW_LAKEHOUSE;
CREATE SCHEMA IF NOT EXISTS SILVER WITH MANAGED ACCESS;
CREATE SCHEMA IF NOT EXISTS GOLD WITH MANAGED ACCESS;
USE WAREHOUSE DATALAKE_WH;
USE SCHEMA CDW_LAKEHOUSE.SILVER;

// ************************ CREATING THE SNOWFLAKE-MANAGED TABLES SOURCE FOR OUR PROJECT
CREATE TABLE IF NOT EXISTS MATCH_SQUAD AS SELECT *, CURRENT_TIMESTAMP AS LOAD_DATETIME FROM CRICKETINFO_DB.IN_IPL.MATCH_SQUAD WHERE 1=0;
CREATE TABLE IF NOT EXISTS MATCHES_DATA AS SELECT *, CURRENT_TIMESTAMP AS LOAD_DATETIME FROM CRICKETINFO_DB.IN_IPL.MATCHES_DATA WHERE 1=0;
CREATE TABLE IF NOT EXISTS MATCHES_DATA_BBB AS SELECT *, CURRENT_TIMESTAMP AS LOAD_DATETIME FROM CRICKETINFO_DB.IN_IPL.MATCHES_DATA_BBB WHERE 1=0;
CREATE TABLE IF NOT EXISTS SERIES AS SELECT *, CURRENT_TIMESTAMP AS LOAD_DATETIME FROM CRICKETINFO_DB.IN_IPL.SERIES WHERE 1=0;
CREATE TABLE IF NOT EXISTS SERIES_SQUAD AS SELECT *, CURRENT_TIMESTAMP AS LOAD_DATETIME FROM CRICKETINFO_DB.IN_IPL.SERIES_SQUAD WHERE 1=0;


// ************************ CREATING AUTO REFRESH OF THE SILVER TABLES BASED ON PIPE DATA LOAD IN RAW
CALL SPROC_LOAD_SILVER_MATCH_SQUAD();

// ************************ CREATING THE EXTERNAL VOLUME FOR SNOWFLAKE MANAGED ICEBERG LAKEHOUSE IMPLEMENTATION
CREATE OR REPLACE EXTERNAL VOLUME iceberg_external_volume
   STORAGE_LOCATIONS =
      (
         (
            NAME = 'my-azure-central-india'
            STORAGE_PROVIDER = 'AZURE'
            STORAGE_BASE_URL = 'azure://divyanshsaxena.blob.core.windows.net/iceberg/'
            AZURE_TENANT_ID = '33f68f95-8baf-4026-8cff-9cd65f5a75ae'

         )
      );


// ************************ CREATING AN ICEBERG DYNAMIC TABLE FOR TEAM DETAILS (DIMENSION) SCD1
CREATE DYNAMIC ICEBERG TABLE IF NOT EXISTS TEAMS_DIM (TEAM_HASH STRING, TEAM_NAME  STRING, TEAM_SHORT_NAME STRING, TEAM_IMAGE STRING)
  TARGET_LAG = '24 hour'
  WAREHOUSE = DATALAKE_WH
  EXTERNAL_VOLUME = 'iceberg_external_volume'
  CATALOG = 'SNOWFLAKE'
  BASE_LOCATION = 'CRICKET/SILVER/IPL/TEAMS_DIM'
  AS
    SELECT 
    DISTINCT
    HASH("teamName") TEAM_HASH,
    "teamName" AS TEAM_NAME,
    "shortname" AS TEAM_SHORT_NAME,
    "img" AS TEAM_IMAGE,
    FROM
    CDW_LAKEHOUSE.SILVER.SERIES_SQUAD;

SELECT SYSTEM$GET_ICEBERG_TABLE_INFORMATION('TEAMS_DIM');


// ************************ CREATING AN ICEBERG DYNAMIC TABLE FOR PLAYERS DETAILS (DIMENSION) SCD1
CREATE DYNAMIC ICEBERG TABLE IF NOT EXISTS PLAYERS_DIM (PLAYER_HASH STRING, PLAYER_ID  STRING, PLAYER_NAME STRING, PLAYER_IMAGE STRING, ROLE STRING, BATTING_STYLE STRING, BOWLING_STYLE STRING, COUNTRY STRING)
  TARGET_LAG = '24 hour'
  WAREHOUSE = DATALAKE_WH
  EXTERNAL_VOLUME = 'iceberg_external_volume'
  CATALOG = 'SNOWFLAKE'
  BASE_LOCATION = 'CRICKET/SILVER/IPL/PLAYERS_DIM'
  AS
    WITH PLAYERS_DATA AS (
    SELECT *, PARSE_JSON("players") players_ FROM CDW_LAKEHOUSE.SILVER.SERIES_SQUAD
    )
    SELECT 
    HASH(f.value:id::STRING) PLAYER_HASH,
    f.value:id::STRING AS PLAYER_ID,
    f.value:name::STRING AS PLAYER_NAME,
    f.value:playerImg::STRING AS PLAYER_IMAGE,
    f.value:role::STRING AS ROLE,
    f.value:battingStyle::STRING AS BATTING_STYLE,
    f.value:bowlingStyle::STRING AS BOWLING_STYLE,
    f.value:country::STRING AS COUNTRY
    FROM PLAYERS_DATA A, LATERAL FLATTEN (INPUT=>players_) f;

SELECT SYSTEM$GET_ICEBERG_TABLE_INFORMATION('PLAYERS_DIM');

// ************************ CREATING AN ICEBERG DYNAMIC TABLE FOR MATCHES DETAILS (DIMENSION) SCD2
CREATE DYNAMIC ICEBERG TABLE IF NOT EXISTS SERIES_MATCHES_DIM (REC_HASH STRING, MATCH_HASH  STRING, MATCH_ID STRING, MATCH_NAME STRING, MATCH_TYPE STRING, VENUE STRING, STADIUM STRING, LOCATION STRING, MATCH_DATE DATE, MATCH_DATETIME TIMESTAMP_NTZ, TEAM_A STRING, TEAM_B STRING, LOAD_DATETIME TIMESTAMP_NTZ, ROW_NUM NUMBER(10,0), ACTIVE_FLAG STRING, END_DATE TIMESTAMP_NTZ)
  TARGET_LAG = '24 hour'
  WAREHOUSE = DATALAKE_WH
  EXTERNAL_VOLUME = 'iceberg_external_volume'
  CATALOG = 'SNOWFLAKE'
  BASE_LOCATION = 'CRICKET/SILVER/IPL/SERIES_MATCHES_DIM'
  AS
    WITH SERIES_SRC AS (
    SELECT 
    HASH("id") AS MATCH_HASH,
    "id" as MATCH_ID,
    "name" AS MATCH_NAME,
    UPPER("matchType") AS MATCH_TYPE,
    "venue" as VENUE,
    TRIM(split_part("venue",',',1)) as STADIUM,
    TRIM(split_part("venue",',',2)) as LOCATION,
    "date" AS MATCH_DATE,
    "dateTimeGMT" AS MATCH_DATETIME,
    PARSE_JSON("teams")[0]::VARCHAR AS TEAM_A,
    PARSE_JSON("teams")[1]::VARCHAR AS TEAM_B,
    LOAD_DATETIME
    FROM CDW_LAKEHOUSE.SILVER.SERIES
    )
    SELECT HASH(MATCH_NAME,MATCH_TYPE,VENUE,STADIUM,LOCATION,MATCH_DATE,MATCH_DATETIME,TEAM_A,TEAM_B) REC_HASH,
    *,
    row_number() over (partition by MATCH_NAME order by LOAD_DATETIME desc) ROW_NUM,
    case when ROW_NUM = 1 then 'Y' else 'N' end ACTIVE_FLG,
    case when ROW_NUM = 1 then null else current_date() end END_DATE
    FROM SERIES_SRC; 

SELECT SYSTEM$GET_ICEBERG_TABLE_INFORMATION('SERIES_MATCHES_DIM');

// ************************ CREATING AN ICEBERG DYNAMIC TABLE FOR MATCHES WINNERS STATISTICS (FACT)
CREATE DYNAMIC ICEBERG TABLE IF NOT EXISTS MATCH_COMPLETION_FACT (MATCH_HASH  STRING, MATCH_STATUS STRING, TOSS_WINNER STRING, TOSS_CHOICE STRING, MATCH_WINNER STRING, INNING STRING, OVERS NUMBER(38,1), RUNS NUMBER(10,0), WICKETS NUMBER(10,0))
  TARGET_LAG = '24 hour'
  WAREHOUSE = DATALAKE_WH
  EXTERNAL_VOLUME = 'iceberg_external_volume'
  CATALOG = 'SNOWFLAKE'
  BASE_LOCATION = 'CRICKET/SILVER/IPL/MATCH_COMPLETION_FACT'
  AS
    WITH MATCH_STATS AS (
    SELECT DISTINCT
        HASH("id") AS MATCH_HASH,
        "status" AS MATCH_STATUS,
        HASH("tossWinner") AS TOSS_WINNER_HASH,
        "tossChoice" AS TOSS_CHOICE,
        PARSE_JSON("score") AS SCORE
    FROM CDW_LAKEHOUSE.SILVER.MATCHES_DATA
    )
    SELECT A.* EXCLUDE SCORE,
        HASH(TRIM(SPLIT_PART(MATCH_STATUS,'won',1))) MATCH_WINNER_HASH,
        f.value:inning::STRING AS inning,
        f.value:o::FLOAT AS overs,
        f.value:r::INT AS runs,
        f.value:w::INT AS wickets
    FROM MATCH_STATS a, LATERAL FLATTEN(INPUT=>SCORE) F; 

SELECT SYSTEM$GET_ICEBERG_TABLE_INFORMATION('MATCH_COMPLETION_FACT');


// ************************ CREATING AN ICEBERG DYNAMIC TABLE FOR MATCH FINALIZED SQUADS (FACT)
CREATE DYNAMIC ICEBERG TABLE IF NOT EXISTS MATCH_SQUAD_FACT (MATCH_HASH  STRING, TEAM_HASH STRING, PLAYER_HASH STRING)
  TARGET_LAG = '24 hour'
  WAREHOUSE = DATALAKE_WH
  EXTERNAL_VOLUME = 'iceberg_external_volume'
  CATALOG = 'SNOWFLAKE'
  BASE_LOCATION = 'CRICKET/SILVER/IPL/MATCH_SQUAD_FACT'
  AS
    WITH MATCH_SQUAD_DATA AS (
    SELECT PARSE_JSON("0") AS TEAM_A FROM CDW_LAKEHOUSE.SILVER.MATCH_SQUAD
    UNION
    SELECT PARSE_JSON("1") AS TEAM_B FROM CDW_LAKEHOUSE.SILVER.MATCH_SQUAD
    )
    SELECT DISTINCT
    HASH(team_a:match_id::VARCHAR) AS MATCH_HASH,
    HASH(team_a:teamName::VARCHAR) AS TEAM_HASH,
    HASH(f.value:id::VARCHAR) AS PLAYER_HASH,
    FROM MATCH_SQUAD_DATA A, LATERAL FLATTEN(INPUT=> TEAM_A:players) F
    ;

SELECT SYSTEM$GET_ICEBERG_TABLE_INFORMATION('MATCH_SQUAD_FACT');


// ************************ CREATING AN ICEBERG DYNAMIC TABLE FOR BALL BY BALL STATISTICS (FACT)
CREATE DYNAMIC ICEBERG TABLE IF NOT EXISTS MATCH_BALL_BY_BALL_FACT (MATCH_HASH  STRING, BATSMAN_HASH STRING, BOWLER_HASH STRING, BALL_NUMBER NUMBER(10,0), INNING NUMBER(10,0), OVER_NUMBER NUMBER(10,0), BALL_IN_OVER NUMBER(10,0), RUNS NUMBER(10,0), PENALTY_TYPE STRING, EXTRAS NUMBER(10,0))
  TARGET_LAG = '24 hour'
  WAREHOUSE = DATALAKE_WH
  EXTERNAL_VOLUME = 'iceberg_external_volume'
  CATALOG = 'SNOWFLAKE'
  BASE_LOCATION = 'CRICKET/SILVER/IPL/MATCH_BALL_BY_BALL_FACT'
  AS
    WITH MATCH_BBB AS (
    SELECT *, PARSE_JSON("bbb") AS ball_BY_ball FROM CDW_LAKEHOUSE.SILVER.MATCHES_DATA_BBB
    )
    SELECT DISTINCT
        HASH(A."id") AS MATCH_HASH,
        HASH(f.value:batsman:id::STRING) AS batsman_HASH,
        HASH(f.value:bowler:id::STRING) AS bowler_HASH,
        f.value:n::INT AS ball_number,
        f.value:inning::INT AS inning,
        f.value:over::INT AS over_number,
        f.value:ball::INT AS ball_in_over,
        f.value:runs::INT AS runs,
        f.value:penalty::STRING AS penalty_type,
        f.value:extras::INT AS extras
    FROM MATCH_BBB A, LATERAL FLATTEN(INPUT=>BALL_BY_BALL) f;

SELECT SYSTEM$GET_ICEBERG_TABLE_INFORMATION('MATCH_BALL_BY_BALL_FACT');


USE SCHEMA CDW_LAKEHOUSE.GOLD;

CREATE DYNAMIC ICEBERG TABLE IF NOT EXISTS MATCHES_SQUADS_INFO
  TARGET_LAG = DOWNSTREAM
  WAREHOUSE = DATALAKE_WH
  EXTERNAL_VOLUME = 'iceberg_external_volume'
  CATALOG = 'SNOWFLAKE'
  BASE_LOCATION = 'CRICKET/GOLD/IPL_2025/MATCHES_SQUADS_INFO'
  AS
        SELECT
        MATCH_NAME,
        MATCH_TYPE,
        VENUE,
        STADIUM,
        LOCATION,
        MATCH_DATE,
        MATCH_DATETIME,
        TEAM_NAME,
        TEAM_SHORT_NAME,
        TEAM_IMAGE,
        PLAYER_NAME,
        PLAYER_IMAGE,
        ROLE,
        BATTING_STYLE,
        BOWLING_STYLE,
        COUNTRY,
        FROM
        CDW_LAKEHOUSE.SILVER.MATCH_SQUAD_FACT FACT
        JOIN CDW_LAKEHOUSE.SILVER.SERIES_MATCHES_DIM MATCHES_DIM ON FACT.MATCH_HASH = MATCHES_DIM.MATCH_HASH AND ACTIVE_FLAG = 'Y'
        JOIN CDW_LAKEHOUSE.SILVER.TEAMS_DIM TEAMS ON FACT.TEAM_HASH = TEAMS.TEAM_HASH
        JOIN CDW_LAKEHOUSE.SILVER.PLAYERS_DIM PLAYERS ON FACT.PLAYER_HASH = PLAYERS.PLAYER_HASH
        ;

SELECT SYSTEM$GET_ICEBERG_TABLE_INFORMATION('MATCHES_SQUADS_INFO');

CREATE DYNAMIC ICEBERG TABLE IF NOT EXISTS DAILY_MATCHES_STATISTICS
  TARGET_LAG = DOWNSTREAM
  WAREHOUSE = DATALAKE_WH
  EXTERNAL_VOLUME = 'iceberg_external_volume'
  CATALOG = 'SNOWFLAKE'
  BASE_LOCATION = 'CRICKET/GOLD/IPL_2025/DAILY_MATCHES_STATISTICS'
  AS
        SELECT
        MATCH_STATUS,
        TOSS_WINNER_P.TEAM_NAME AS TOSS_WINNER,
        TOSS_CHOICE,
        MATCH_WINNER_P.TEAM_NAME AS MATCH_WINNER,
        INNING,
        OVERS,
        RUNS,
        WICKETS,
        MATCH_NAME,
        MATCH_TYPE,
        VENUE,
        STADIUM,
        LOCATION,
        MATCH_DATE,
        MATCH_DATETIME,
        TEAM_A,
        TEAM_B
        FROM
        CDW_LAKEHOUSE.SILVER.MATCH_COMPLETION_FACT FACT
        JOIN CDW_LAKEHOUSE.SILVER.SERIES_MATCHES_DIM MATCHES_DIM ON FACT.MATCH_HASH = MATCHES_DIM.MATCH_HASH AND ACTIVE_FLAG = 'Y'
        JOIN CDW_LAKEHOUSE.SILVER.TEAMS_DIM TOSS_WINNER_P ON FACT.TOSS_WINNER = TOSS_WINNER_P.TEAM_HASH
        JOIN CDW_LAKEHOUSE.SILVER.TEAMS_DIM MATCH_WINNER_P ON FACT.MATCH_WINNER = MATCH_WINNER_P.TEAM_HASH
        ;

SELECT SYSTEM$GET_ICEBERG_TABLE_INFORMATION('DAILY_MATCHES_STATISTICS');

CREATE DYNAMIC ICEBERG TABLE IF NOT EXISTS MATCHES_BALL_BY_BALL_INSIGHTS
  TARGET_LAG = DOWNSTREAM
  WAREHOUSE = DATALAKE_WH
  EXTERNAL_VOLUME = 'iceberg_external_volume'
  CATALOG = 'SNOWFLAKE'
  BASE_LOCATION = 'CRICKET/GOLD/IPL_2025/MATCHES_BALL_BY_BALL_INSIGHTS'
  AS
        SELECT
        MATCH_NAME,
        MATCH_TYPE,
        VENUE,
        STADIUM,
        LOCATION,
        MATCH_DATE,
        MATCH_DATETIME,
        TEAM_A,
        TEAM_B,
        PLAYER_BALL.PLAYER_NAME AS BOWLER_NAME,
        PLAYER_BALL.BOWLING_STYLE AS BOWLER_BOWLING_STYLE,
        PLAYER_BALL.COUNTRY AS BOWLER_COUNTRY,
        PLAYER_BALL.ROLE AS BOWLER_ROLE,
        PLAYER_BALL.PLAYER_IMAGE AS BOWLER_IMAGE,
        PLAYER_BAT.PLAYER_NAME AS BATSMAN_NAME,
        PLAYER_BAT.BOWLING_STYLE AS BATSMAN_BOWLING_STYLE,
        PLAYER_BAT.COUNTRY AS BATSMAN_COUNTRY,
        PLAYER_BAT.ROLE AS BATSMAN_ROLE,
        PLAYER_BAT.PLAYER_IMAGE AS BATSMAN_IMAGE,
        FACT.BALL_NUMBER,
        FACT.INNING,
        FACT.OVER_NUMBER,
        FACT.BALL_IN_OVER,
        FACT.RUNS,
        FACT.PENALTY_TYPE,
        FACT.EXTRAS
        FROM
        CDW_LAKEHOUSE.SILVER.MATCH_BALL_BY_BALL_FACT FACT
        JOIN CDW_LAKEHOUSE.SILVER.SERIES_MATCHES_DIM MATCHES_DIM ON FACT.MATCH_HASH = MATCHES_DIM.MATCH_HASH AND ACTIVE_FLAG = 'Y'
        JOIN CDW_LAKEHOUSE.SILVER.PLAYERS_DIM PLAYER_BAT ON FACT.BATSMAN_HASH = PLAYER_BAT.PLAYER_HASH
        JOIN CDW_LAKEHOUSE.SILVER.PLAYERS_DIM PLAYER_BALL ON FACT.BOWLER_HASH = PLAYER_BALL.PLAYER_HASH
        ;

SELECT SYSTEM$GET_ICEBERG_TABLE_INFORMATION('MATCHES_BALL_BY_BALL_INSIGHTS');
